##!/bin/sh
#PBS -N ours
#PBS -l nodes=1:ppn=1 -W x=GRES:gpu@1
#PBS -l walltime=36:00:00
#PBS -q qgpu01
#PBS -V
#PBS -S /bin/bash

module load anaconda3-5.2.0
module load cuda-9.0
module load openmpi-3.0.1-gcc-5.5.0
#source activate py_gpu2
#conda install pandas
#################################################################
NP=`cat $PBS_NODEFILE | wc -l`
NN=`cat $PBS_NODEFILE | sort | uniq | tee /tmp/nodes.$$ | wc -l`
cat $PBS_NODEFILE > /tmp/nodefile.$$
echo "process will start at : "
date
echo "++++++++++++++++++++++++++++++++++++++++"
cd $PBS_O_WORKDIR

nvidia-smi > nv.out

##0517 cifar10##
#mpirun -n $NP python main.py --dataset=Cifar10 --model=cnn --batch_size=20 --learning_rate=0.01 --personal_learning_rate=0.01 --beta=1 --lamda=15 --num_global_iters=800 --local_epochs=20 --algorithm=FedAvg --numusers=5 --times=1 --gpu=0 > cifar10_ours_cnn_numusers5.out

mpirun -n $NP python main.py --dataset=Cifar10 --model=cnn --batch_size=20 --learning_rate=0.005 --personal_learning_rate=0.01 --beta=1 --lamda=15 --num_global_iters=800 --local_epochs=20 --algorithm=FedAvg --numusers=5 --times=1 --gpu=0 > 0809_cifar10_fedavg_net.out


#cifar10
#mpirun -n $NP python main.py --dataset=Cifar10 --model=cnn --batch_size=16 --learning_rate=0.01 --num_global_iters=500 --local_epochs=20 --algorithm=FedAvg --numusers=10  --times=1 --gpu=0 > cifar10_aaai-cos_test1.out

#mpirun -n $NP python main.py --dataset=Cifar10 --model=cnn --batch_size=16 --learning_rate=0.01 --num_global_iters=500 --local_epochs=20 --algorithm=FedAvg --numusers=10  --times=1 --gpu=0 > cifar10_ours_softmax5_penalty0.1_test1.out

#emnist
#mpirun -n $NP python main.py --dataset=EMnist --model=cnn --batch_size=16 --learning_rate=0.01 --num_global_iters=500 --local_epochs=20 --algorithm=FedAvg --numusers=10  --times=1 --gpu=0 > EMnist_aaai-cos_test1.out

#mpirun -n $NP python main.py --dataset=EMnist --model=cnn --batch_size=16 --learning_rate=0.01 --num_global_iters=500 --local_epochs=20 --algorithm=FedAvg --numusers=10  --times=1 --gpu=0 > EMnist_ours_softmax5_penalty0.1_test1.out










#without self#
#mpirun -n $NP python main.py --dataset=Mnist --model=cnn --batch_size=16 --learning_rate=0.01 --num_global_iters=500 --local_epochs=20 --algorithm=FedAvg --numusers=10  --times=1 --gpu=0 > FedAvg_cnn_without_test3_softmax5.out

#with self#
#mpirun -n $NP python main.py --dataset=Mnist --model=cnn --batch_size=16 --learning_rate=0.01 --num_global_iters=500 --local_epochs=20 --algorithm=FedAvg --numusers=10  --times=1 --gpu=0 > FedAvg_cnn_with_penalty_test1_softmax5_p0.1.out

#cosdist
#mpirun -n $NP python main.py --dataset=Mnist --model=cnn --batch_size=16 --learning_rate=0.01 --num_global_iters=500 --local_epochs=20 --algorithm=FedAvg --numusers=10  --times=1 --gpu=0 > FedAvg_cnn_cosdist_softmax10.out



#mpirun -n $NP python main.py --dataset=Mnist --model=cnn --batch_size=16 --learning_rate=0.005 --beta=0.001  --num_global_iters=800 --local_epochs=20 --algorithm=PerAvg --numusers=10  --times 1 --gpu=0 > PerAvg_dnn_adam_test2.out

#mpirun -n $NP python main.py --dataset=Mnist --model=cnn --batch_size=16 --learning_rate=0.005 --num_global_iters=500 --local_epochs=20 --algorithm=FedAvg --numusers=10  --times=1 --gpu=0 > FedAvg_penalty_test1.out

#mpirun -n $NP python main.py --dataset=Mnist --model=cnn --batch_size=16 --learning_rate=0.005 --personal_learning_rate=0.1 --beta=1 --lamda=15 --num_global_iters=300 --local_epochs=20 --algorithm=pFedMe --numusers=10 --times=1 --gpu=0 > pfedme_dnn_adam_test2.out


#python3 main.py --dataset Mnist --model dnn --batch_size 20 --learning_rate 0.005 --personal_learning_rate 0.09 --beta 1 --lamda 15 --num_global_iters 800 --local_epochs 20 --algorithm pFedMe --numusers 5 --times 10
#python3 main.py --dataset Mnist --model dnn --batch_size 20 --learning_rate 0.005 --num_global_iters 800 --local_epochs 20 --algorithm FedAvg --numusers 5 --times 10
#python3 main.py --dataset Mnist --model dnn --batch_size 20 --learning_rate 0.005 --beta 0.001  --num_global_iters 800 --local_epochs 20 --algorithm PerAvg --numusers 5 --times 10







#mpirun -n $NP --mca blt self,openib python3 abase.py --model=VGG --N=2000 --cycle=10 > res_VGG_D.out

# mpirun -n $NP python LearnerSimulation.py --model=MnistCNN --workers=16 --epoch=25000 > CNN_Mnist_16workers.out --use_pretrained_model=false 

#mpirun -n $NP python FedMD_main.py --use_pretrained_model=true --conf ../conf/EMNIST_imbalance_conf.json --gpu=1 > newdata_normal_designl10_5_logitscross_test2moretestsmallbatch.out

#mpirun -n $NP python FedMD_main_learnweight.py --use_pretrained_model=true --conf ../conf/EMNIST_imbalance_conf.json --gpu=1 > newdata_learnweightsoftmax_dl10_5_test2_T10lr50.out

#mpirun -n $NP python FedMD_main_learnweight.py --use_pretrained_model=true --conf ../conf/EMNIST_imbalance_conf.json --gpu=1 > fed_newdata_test3_learnweightsoftmaxlr10.out
##########################################
#mpirun -n $NP python FedMD_main.py --conf ../conf/EMNIST_balance_conf.json --gpu=1 > fed_splitdata_weight_minmax-logits3.out

#mpirun -n $NP python FedMD_main.py --conf ../conf/EMNIST_balance_conf.json --gpu=1 > fed_splitdata_weight_minmax-logits4.out

#mpirun -n $NP python FedMD_main.py --conf ../conf/EMNIST_balance_conf.json --gpu=1 > fed_splitdata_weight_minmax-logits5.out

#mpirun -n $NP python FedMD_main.py --conf ../conf/EMNIST_balance_conf.json --gpu=1 > fed_splitdata_weight_minmax-logits6.out

#mpirun -n $NP python FedMD_main.py --conf ../conf/EMNIST_balance_conf.json --gpu=1 > fed_splitdata_weight_minmax-logits7.out


echo "++++++++++++++++++++++++++++++++++++++++"
echo "process end at : "
date
rm -f /tmp/nodefile.$$
rm -f /tmp/nodes.$$

module unload openmpi-3.0.1-gcc-5.5.0
module unload cuda-9.0
